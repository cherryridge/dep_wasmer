name: Build on Windows

on:
    workflow_call:
        inputs:
            commit-sha:
                type: string
                required: true
        outputs:
            runid:
                value: ${{github.run_id}}
    workflow_dispatch:
        inputs:
            commit-sha:
                type: string
                description: Target commit
                required: true

jobs:
    build:
        runs-on: windows-latest
        steps:

          - name: Checkout Wasmer
            uses: actions/checkout@v4
            with:
                repository: wasmerio/wasmer
                path: wasmer
                ref: ${{inputs.commit-sha}}
                submodules: recursive

          - name: Install Rust
            uses: dtolnay/rust-toolchain@v1
            with:
                toolchain: stable
                targets: x86_64-pc-windows-msvc, aarch64-pc-windows-msvc

          - name: Build Windows x64 Debug
            shell: pwsh
            run: |
                cd wasmer
                cargo build -p wasmer-c-api --target x86_64-pc-windows-msvc
                dir

          - name: Build Windows x64 Release
            shell: pwsh
            run: |
                cd wasmer
                cargo build -p wasmer-c-api --target x86_64-pc-windows-msvc --release

          - name: stop
            shell: pwsh
            run: fwejfiowe

          - name: Delete Projects
            shell: pwsh
            run: |
                cd bgfx
                del -r .build\projects

          - name: Build Windows arm64 Debug
            shell: pwsh
            run: |
                cd bgfx
                ..\bx\tools\bin\windows\genie.exe --platform=ARM64 vs2022
                $env:CL = "/Zi /Od /FC $env:CL"
                $env:LINK = "/DEBUG:FULL $env:LINK"
                msbuild ".build/projects/vs2022/bgfx.sln" /m /p:Configuration=Debug /p:Platform=ARM64

          - name: Build Windows arm64 Release
            shell: pwsh
            run: |
                cd bgfx
                msbuild ".build/projects/vs2022/bgfx.sln" /m /p:Configuration=Release /p:Platform=ARM64

          - name: Compress Product
            shell: pwsh
            run: |
                echo ${{inputs.commit-sha}} >> VERSION.txt
                mkdir temp\include
                cp -r bgfx\include\* temp\include
                cp -r bx\include\* temp\include
                cp -r bimg\include\* temp\include
                mv .\bgfx\.build\win64_vs2022\bin\shadercRelease.exe .\shaderc.exe
                7z a bgfx_windows_x64_debug.7z .\bgfx\.build\win64_vs2022\bin\bgfxDebug.lib .\bgfx\.build\win64_vs2022\bin\bgfxDebug.pdb .\bgfx\.build\win64_vs2022\bin\bxDebug.lib .\bgfx\.build\win64_vs2022\bin\bxDebug.pdb .\bgfx\.build\win64_vs2022\bin\bimgDebug.lib .\bgfx\.build\win64_vs2022\bin\bimgDebug.pdb .\shaderc.exe .\temp\include VERSION.txt
                7z a bgfx_windows_x64_release.7z .\bgfx\.build\win64_vs2022\bin\bgfxRelease.lib .\bgfx\.build\win64_vs2022\bin\bgfxRelease.pdb .\bgfx\.build\win64_vs2022\bin\bxRelease.lib .\bgfx\.build\win64_vs2022\bin\bxRelease.pdb .\bgfx\.build\win64_vs2022\bin\bimgRelease.lib .\bgfx\.build\win64_vs2022\bin\bimgRelease.pdb .\shaderc.exe .\temp\include VERSION.txt
                7z a bgfx_windows_arm64_debug.7z .\bgfx\scripts\bgfxDebug.lib .\bgfx\scripts\bgfxDebug.pdb .\bimg\scripts\bimgDebug.lib .\bimg\scripts\bimgDebug.pdb .\bx\scripts\bxDebug.lib .\bx\scripts\bxDebug.pdb .\shaderc.exe .\temp\include VERSION.txt
                7z a bgfx_windows_arm64_release.7z .\bgfx\scripts\bgfxRelease.lib .\bgfx\scripts\bgfxRelease.pdb .\bimg\scripts\bimgRelease.lib .\bimg\scripts\bimgRelease.pdb .\bx\scripts\bxRelease.lib .\bx\scripts\bxRelease.pdb .\shaderc.exe .\temp\include VERSION.txt

          - name: Upload Archive
            uses: actions/upload-artifact@v4
            with:
                name: bgfx_windows
                path: |
                    *.7z
                retention-days: 7