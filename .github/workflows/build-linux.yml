name: Build on Linux

on:
    workflow_call:
        inputs:
            commit-sha:
                type: string
                required: true
        outputs:
            runid:
                value: ${{github.run_id}}
    workflow_dispatch:
        inputs:
            commit-sha:
                type: string
                description: Target commit
                required: true

jobs:
    build:
        runs-on: ubuntu-latest
        steps:

          - name: Checkout Wasmer
            uses: actions/checkout@v4
            with:
                repository: wasmerio/wasmer
                path: wasmer
                ref: ${{inputs.commit-sha}}
                submodules: recursive

          - name: Install Rust
            uses: dtolnay/rust-toolchain@v1
            with:
                toolchain: stable
                targets: x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu

          - name: Install Cross Compiler Toolchain
            shell: bash
            run: |
                sudo apt update
                sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

          - name: Install LLVM 18
            shell: bash
            run: |
                mkdir llvm
                cd llvm
                wget -O llvm.tar.xz https://github.com/wasmerio/llvm-custom-builds/releases/download/18.x/llvm-linux-amd64.tar.xz
                tar -xf llvm.tar.xz
                echo "${{github.workspace}}/llvm/bin" >> $GITHUB_PATH

          - name: Build Linux x64 Debug
            shell: bash
            run: |
                cd wasmer
                cargo rustc -p wasmer-c-api --target x86_64-unknown-linux-gnu --no-default-features --features "llvm,wat" -- -Cdebuginfo=2 --crate-type=staticlib

          - name: Build Linux x64 Release
            shell: bash
            run: |
                cd wasmer
                cargo rustc -p wasmer-c-api --target x86_64-unknown-linux-gnu --no-default-features --features "llvm,wat" --release -- --crate-type=staticlib

          - name: Build Linux arm64 Debug
            shell: bash
            env:
                CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
            run: |
                cd wasmer
                cargo rustc -p wasmer-c-api --target aarch64-unknown-linux-gnu --no-default-features --features "llvm,wat" -- -Cdebuginfo=2 --crate-type=staticlib

          - name: Build Linux arm64 Release
            shell: bash
            env:
                CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
            run: |
                cd wasmer
                cargo rustc -p wasmer-c-api --target aarch64-unknown-linux-gnu --no-default-features --features "llvm,wat" --release -- --crate-type=staticlib

          - name: Compress Product
            shell: bash
            run: |
                echo ${{inputs.commit-sha}} >> VERSION.txt
                mkdir -p temp/include
                cp -a wasmer/lib/c-api/tests/wasm-c-api/include/* temp/include
                cp wasmer/lib/c-api/wasmer.h temp/include
                cp wasmer/lib/c-api/wasmer_wasm.h temp/include

                7z a wasmer_linux_x64_debug.7z  ./temp/include VERSION.txt
                7z a wasmer_linux_x64_release.7z  ./temp/include VERSION.txt
                7z a wasmer_linux_arm64_debug.7z  ./temp/include VERSION.txt
                7z a wasmer_linux_arm64_release.7z  ./temp/include VERSION.txt

          - name: Upload Archive
            uses: actions/upload-artifact@v4
            with:
                name: wasmer_linux
                path: |
                    *.7z
                retention-days: 7